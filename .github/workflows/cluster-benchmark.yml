name: Benchmarking Cluster

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_call:
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Connect Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:k0s-benchmark
          hostname: hivetool-k0s

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Install kubectl
        uses: Azure/setup-kubectl@v4.0.1

      - name: Add kubeconfig from secret
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG" > $HOME/.kube/config

      - name: Run kube-bench Job
        run: |
          kubectl delete -f templates/kube-bench.yaml -n checkout --ignore-not-found=true
          kubectl apply -f templates/kube-bench.yaml -n checkout
          echo "Waiting for kube-bench job to complete..."
          kubectl wait --for=condition=complete -n checkout job/kube-bench --timeout=5m || true

      - name: Get Scan Results
        id: get-logs
        run: |
          LOG_CONTENT=$(kubectl logs -n checkout jobs/kube-bench)
          echo "log_data<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate Issue Body
        id: generate-issue-body
        run: |
          ISSUE_BODY_FILE="/tmp/issue.txt"
          cat << EOF > $ISSUE_BODY_FILE
          ## Kube-bench Security Scan Report

          This issue was automatically generated on **$(date -u "+%B %d, %Y")** by the [Benchmarking Cluster workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).

          ### ðŸš¨ Scan Results

          <details>
          <summary><strong>Click to expand the full log output</strong></summary>

          \`\`\`log
          ${{ steps.get-logs.outputs.log_data }}
          \`\`\`

          </details>
          EOF
          # Set the file path as an output for the next step.
          echo "body_path=$ISSUE_BODY_FILE" >> $GITHUB_OUTPUT

      - name: Look for an existing report issue
        id: find-issue
        uses: micalevisk/last-issue-action@v2
        with:
          state: open
          labels: | 
            security-scan 
            automated-report
            kube-bench

      - name: Create or Update Issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Kube-bench Weekly Security Scan Report
          content-filepath: "${{ steps.generate-issue-body.outputs.body_path }}"
          issue-number: ${{ steps.find-issue.outputs.issue_number }}
          labels: | 
            security-scan 
            automated-report
            kube-bench
          assignees: saveside
